<#
.SYNOPSIS
Quickly tests network connectivity to multiple hosts and generates a report.

.DESCRIPTION
This script allows IT administrators to test network connectivity to a list of specified hosts. It pings each host and records the status (online/offline) along with the average response time. The results are then exported to an HTML report for easy viewing.
It is useful for monitoring network availability, troubleshooting connectivity issues, and maintaining an overview of network health, without manually checking each host.

.PARAMETER Path
Optional. Path to a .txt file containing one or more hosts. Each host should be listed on a new line.

.EXAMPLE
.\TestNetworkConnectivity.ps1  -Path .\hosts.txt

.EXAMPLE
.\TestNetworkConnectivity.ps1 

.REQUIREMENTS
- PowerShell 7.0+

.NOTES
Author: janskulimowski 
Created: 2025-08-05  
Version: 1.0  
Run as: Administrator (elevated privileges)
#>

param ([string]$Path)

#CSS style for HTML report
# This style will be applied to the HTML report generated by the script
$style = @"
<style>
  body {
    font-family: 'Segoe UI', Tahoma, sans-serif;
    background-color: #f4f4f9;
    margin: 20px;
  }

  h1 {
    color: #333;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    background-color: #fff;
  }

  th {
    background-color: #0066cc;
    color: white;
    padding: 12px;
    text-align: left;
    font-size: 14px;
  }

  td {
    padding: 10px;
    border-bottom: 1px solid #ddd;
    font-size: 13px;
  }

  tr:nth-child(even) {
    background-color: #f9f9f9;
  }

  tr:hover {
    background-color: #eef;
  }

</style>
"@
function pingHosts {
    param (
        [Parameter(Mandatory = $true)]
        $hostsList
    )
    # Initialize an empty array to hold the report entries
    $report = @()

    # Loop through each host and test connectivity
    foreach ($shost in $hostsList) {
        $pingResult = Test-Connection -ComputerName $shost -Count 5 -Ping -ErrorAction SilentlyContinue
        if ($pingResult) {
            $ping = ($pingResult | Measure-Object -Property Latency -Average).Average
            $entry = [PSCustomObject]@{
                Host                = $shost
                Status              = "Online"
                AverageResponseTime = "$ping ms"
                Date                = (Get-Date).ToString("dd.MM.yyyy HH:mm:ss")
            }
            $report += $entry
        }
        else {
            $entry = [PSCustomObject]@{
                Host                = $shost
                Status              = "Offline"
                AverageResponseTime = "N/A"
                Date                = (Get-Date).ToString("dd.MM.yyyy HH:mm:ss")
            }
            $report += $entry
        }
    }
    #Export the report to HTML
    $report | ConvertTo-Html -Head $style -Title "Report Hosts Avibility" | Out-File "report_hosts.html" -Encoding UTF8
    Write-Host "Report generated successfully. Check 'report_hosts.html' for details."
    Invoke-Item "report_hosts.html"
    
}

# Check if the path (.txt file) parameter is provided
if ($Path) {
    Write-Host "Loading data from file: $Path"
    if (-Not (Test-Path -Path $Path)) {
    Write-Error "File not found: $Path"
    return
    }
    $hostsList = Get-Content -Path $Path
    Write-Host "Starting ping test for: $hostsList"
    pingHosts $hostsList
}
else {
    $spechost = Read-Host "Enter Hostname or IPAdress:"
    Write-Host "Staring ping test for: $spechost"
    pingHosts $spechost
    
}

