<#
.SYNOPSIS
Quickly retrieves detailed information about locked out and disabled Active Directory user accounts.

.DESCRIPTION
This script allows IT administrators to retrieve and display information about one or more locked out/disabled Active Directory users, 
without manually browsing through tools like Active Directory Users and Computers (ADUC).

It returns attributes such as:
-Display name
-SamAccountName
-Email address
-Title
-Department
-Manager
-Last logon date
-Account status (locked out/disabled)
-Group membership

Useful for audits, troubleshooting, onboarding/offboarding, and helpdesk support.

.EXAMPLE
.\Get-LockedOutUsers.ps1 -User john.smith
# The script will retrieve and display information for the user 'john.smith'.

.EXAMPLE
.\Get-LockedOutUsers.ps1
# The script will prompt you and generate report about all locked out and disabled users in the domain.

.REQUIREMENTS
- PowerShell 7.0+
- ActiveDirectory Module for Windows PowerShell
- Domain-joined machine with AD access

.NOTES
Author: janskulimowski 
Created: 2025-08-06  
Version: 1.0  
Run as: Administrator (elevated privileges)
#>


param ([string]$User)
Import-Module ActiveDirectory

# CSS style for HTML report
# This style will be applied to the HTML report generated by the script
$style = @"
<style>
    body {
        font-family: Segoe UI, Arial, sans-serif;
        margin: 20px;
        background-color: #f8f9fa;
        color: #212529;
    }
    h1, h2, h3 {
        color: #343a40;
    }
    table {
        border-collapse: collapse;
        width: 100%;
        margin-top: 20px;
        background-color: #ffffff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    th, td {
        border: 1px solid #dee2e6;
        text-align: left;
        padding: 8px;
    }
    th {
        background-color: #343a40;
        color: #ffffff;
        font-weight: bold;
    }
    tr:nth-child(even) {
        background-color: #f1f1f1;
    }
    tr:hover {
        background-color: #e2e6ea;
    }
</style>
"@
$properties = @(
    "DisplayName", "SamAccountName", "EmailAddress", "Title", "Department",
    "Manager", "LastLogonDate", "Enabled", "LockedOut", "MemberOf"
)
# Function to retrieve and display information about a specific locked out or blocked user
function Get-LockedOutUser {
    param (
        [Parameter(Mandatory = $true)]
        [string]$Username
    )
    try {
        
        $user = Get-ADUser -Identity $Username -Properties $properties

        if (-not $user) {
            Write-Warning "User '$Username' not found in Active Directory."
            return
        }
        $state = if ($user.Enabled) { 'Enabled' } else { 'Disabled' }
        $locked = if ($user.LockedOut) { 'Yes' } else { 'No' }
        if (($user.LockedOut) -OR (-not $user.Enabled)) {
            Write-Output "User: $($user.DisplayName)"
            Write-Output "Username: $($user.SamAccountName)"
            Write-Output "Email: $($user.EmailAddress)"
            Write-Output "Department: $($user.Department)"
            Write-Output "Last Logon: $($user.LastLogonDate)"
            Write-Output "Account State: $state"
            Write-Output "Account Locked: $locked"
        }
        else {
            Write-Output "User '$Username' is not locked out."
        }
    }
    catch {
        Write-Error "Error retrieving user information: $_"
    }
}
# Function to retrieve and display information about all locked out or blocked users and generate a HTML report
function Get-AllLockedOutUsers {
    $report = @()
    try {
        $lockedUsers = Search-ADAccount -LockedOut -UsersOnly
        $disabledUsers = Search-ADAccount -AccountDisabled -UsersOnly
        $reportUsers = @($lockedUsers) + @($disabledUsers) | Sort-Object SamAccountName -Unique
        

        foreach ($account in $reportUsers) {
            $user = Get-ADUser -Identity $account.SamAccountName -Properties $properties
            $status = @()
            if (-not $user.Enabled) {
                $status += "Disabled"
            }
            if ($lockedUsers.SamAccountName -contains $user.SamAccountName) {
                $status += "Locked Out"
            }

            $entry = [PSCustomObject]@{
                DisplayName    = $user.DisplayName
                SamAccountName = $user.SamAccountName
                Email          = $user.EmailAddress
                Title          = $user.Title
                Department     = $user.Department
                Manager        = if ($user.Manager) {try {(Get-ADUser -Identity $user.Manager -Properties DisplayName).DisplayName}catch {"N/A"}}else {"N/A"}
                LastLogonDate  = $user.LastLogonDate
                AccountStatus  = ($status -join " + ")
                Groups         = ($user.MemberOf | ForEach-Object { ($_ -split ',')[0] -replace '^CN=' }) -join ', '
            }
            $report += $entry
        }
    }
    catch {
        Write-Error "Error retrieving locked out users: $_"
    }

    if ($report.Count -eq 0) {
        Write-Output "No locked out users found."
        return
    }

    # Eksport do HTML
    $reportpath = "$env:USERPROFILE\Desktop\report_lockedout_users.html"
    $report | ConvertTo-Html -Head $style -Title "Report LockedOut AD Users" | Out-File $reportpath -Encoding UTF8
    Write-Host "Report generated successfully: report_lockedout_users.html"
    Invoke-Item "report_lockedout_users.html"
}

#main script execution
if ($User) {
    Write-Host "Loading info about: $User"
    Get-LockedOutUser $User
}
else {
    Write-Host "No user specified. Generating report for all locked out and disabled users."
    Get-AllLockedOutUsers
}